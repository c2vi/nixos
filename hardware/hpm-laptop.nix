# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
	imports =
   	[ (modulesPath + "/installer/scan/not-detected.nix")
   ];

	# Use the GRUB 2 boot loader.
	boot.loader.grub = {
  		enable = true;
  		version = 2;
  		device = "nodev";
  		efiSupport = true;
		extraConfig = ''
			set timeout=2
		'';
	};

	boot.initrd.availableKernelModules = [ "xhci_pci" "vmd" "nvme" "usbhid" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
	boot.initrd.kernelModules = [ "dm-snapshot" ];
	boot.kernelModules = [ "kvm-intel" ];
	boot.extraModulePackages = [ ];
  boot.loader.efi.canTouchEfiVariables = true;

	fileSystems."/" = {
		device = "/dev/disk/by-uuid/6518e61e-7120-48ef-81a3-5eae0f67297e";
   	fsType = "btrfs";
   };

	fileSystems."/boot" = {
		device = "/dev/disk/by-uuid/0E6C-F209";
		fsType = "vfat";
	};

	swapDevices = [
		{ device = "/dev/disk/by-uuid/418bf0d8-e548-45d5-802a-53de72707ebc"; }
   ];

	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp0s13f0u1c2.useDHCP = lib.mkDefault true;
	# networking.interfaces.wlo1.useDHCP = lib.mkDefault true;	

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
	hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
